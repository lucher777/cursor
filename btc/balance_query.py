#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
OKX‰ΩôÈ¢ùÊü•ËØ¢Â∑•ÂÖ∑
"""

from exchange_client import OKExClient
import json
from datetime import datetime

def format_balance_display(balance_data: dict) -> str:
    """Ê†ºÂºèÂåñ‰ΩôÈ¢ùÊòæÁ§∫"""
    if "error" in balance_data:
        return f"‚ùå Êü•ËØ¢Â§±Ë¥•: {balance_data['error']}"
    
    if "data" not in balance_data or not balance_data["data"]:
        return "‚ùå Êó†‰ΩôÈ¢ùÊï∞ÊçÆ"
    
    result = []
    result.append("üí∞ Ë¥¶Êà∑‰ΩôÈ¢ù‰ø°ÊÅØ")
    result.append("=" * 50)
    
    total_usdt_value = 0.0
    
    for item in balance_data["data"]:
        ccy = item.get('ccy', 'N/A')
        cash_bal = float(item.get('cashBal', 0))
        avail_bal = float(item.get('availBal', 0))
        total_eq = float(item.get('totalEq', 0))
        upl = float(item.get('upl', 0))
        upl_ratio = float(item.get('uplRatio', 0))
        
        # Âè™ÊòæÁ§∫Êúâ‰ΩôÈ¢ùÁöÑÂ∏ÅÁßç
        if cash_bal > 0 or total_eq > 0:
            result.append(f"\nüìä {ccy}:")
            result.append(f"   Áé∞Èáë‰ΩôÈ¢ù: {cash_bal:,.8f}")
            result.append(f"   ÂèØÁî®‰ΩôÈ¢ù: {avail_bal:,.8f}")
            result.append(f"   ÊÄªÊùÉÁõä: {total_eq:,.8f}")
            
            if upl != 0:
                upl_sign = "üìà" if upl > 0 else "üìâ"
                result.append(f"   Êú™ÂÆûÁé∞Áõà‰∫è: {upl_sign} {upl:,.8f}")
                result.append(f"   Áõà‰∫èÊØî‰æã: {upl_ratio:.4f}%")
            
            # ‰º∞ÁÆóUSDT‰ª∑ÂÄºÔºàÁÆÄÂåñËÆ°ÁÆóÔºâ
            if ccy == "USDT":
                total_usdt_value += total_eq
            elif ccy in ["BTC", "ETH"]:
                # ‰ΩøÁî®Â§ßËá¥‰ª∑Ê†º‰º∞ÁÆó
                price_map = {"BTC": 43000, "ETH": 2300}
                usdt_value = total_eq * price_map.get(ccy, 0)
                total_usdt_value += usdt_value
                result.append(f"   ‰º∞ÁÆóUSDT‰ª∑ÂÄº: {usdt_value:,.2f} USDT")
    
    if total_usdt_value > 0:
        result.append(f"\nüíµ ÊÄª‰º∞ÁÆó‰ª∑ÂÄº: {total_usdt_value:,.2f} USDT")
    
    result.append(f"\n‚è∞ Êü•ËØ¢Êó∂Èó¥: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    
    return "\n".join(result)

def query_balance(ccy: str = None):
    """Êü•ËØ¢‰ΩôÈ¢ù"""
    print("=" * 60)
    print("OKX‰ΩôÈ¢ùÊü•ËØ¢Â∑•ÂÖ∑")
    print("=" * 60)
    
    client = OKExClient()
    
    if ccy:
        print(f"\nüîç Êü•ËØ¢ {ccy} ‰ΩôÈ¢ù...")
        balance_data = client.get_balance_v5_api(ccy)
    else:
        print(f"\nüîç Êü•ËØ¢ÊâÄÊúâÂ∏ÅÁßç‰ΩôÈ¢ù...")
        balance_data = client.get_balance_v5_api()
    
    # ÊòæÁ§∫Ê†ºÂºèÂåñÁªìÊûú
    formatted_result = format_balance_display(balance_data)
    print(formatted_result)
    
    return balance_data

def interactive_balance_query():
    """‰∫§‰∫íÂºè‰ΩôÈ¢ùÊü•ËØ¢"""
    print("=" * 60)
    print("OKX‰ΩôÈ¢ùÊü•ËØ¢Â∑•ÂÖ∑ - ‰∫§‰∫íÊ®°Âºè")
    print("=" * 60)
    
    while True:
        print("\nËØ∑ÈÄâÊã©Êìç‰Ωú:")
        print("1. Êü•ËØ¢ÊâÄÊúâÂ∏ÅÁßç‰ΩôÈ¢ù")
        print("2. Êü•ËØ¢ÁâπÂÆöÂ∏ÅÁßç‰ΩôÈ¢ù")
        print("3. ÈÄÄÂá∫")
        
        choice = input("\nËØ∑ËæìÂÖ•ÈÄâÊã© (1-3): ").strip()
        
        if choice == "1":
            query_balance()
        elif choice == "2":
            ccy = input("ËØ∑ËæìÂÖ•Â∏ÅÁßç‰ª£Á†Å (Â¶Ç BTC, ETH, USDT): ").strip().upper()
            if ccy:
                query_balance(ccy)
            else:
                print("‚ùå Â∏ÅÁßç‰ª£Á†Å‰∏çËÉΩ‰∏∫Á©∫")
        elif choice == "3":
            print("üëã ÂÜçËßÅ!")
            break
        else:
            print("‚ùå Êó†ÊïàÈÄâÊã©ÔºåËØ∑ÈáçÊñ∞ËæìÂÖ•")

if __name__ == "__main__":
    import sys
    
    if len(sys.argv) > 1:
        # ÂëΩ‰ª§Ë°åÊ®°Âºè
        ccy = sys.argv[1].upper()
        query_balance(ccy)
    else:
        # ‰∫§‰∫íÊ®°Âºè
        interactive_balance_query() 